# generated by fastapi-codegen:
#   filename:  parcolar-0.1.yaml
#   timestamp: 2024-06-17T06:03:03+00:00

from __future__ import annotations

import json
import yaml
import xml
import dicttoxml

from fastapi import FastAPI, Response, HTTPException
from fastapi.requests import Request
from fastapi.responses import JSONResponse

from models import ParcolarRequest, ParcolarResponse

app = FastAPI(
    title='OpenAPI definition',
    version='v0',
    servers=[{'url': 'http://localhost:8080', 'description': 'Generated server url'}],
)

# https://github.com/tiangolo/fastapi/issues/2140#issuecomment-711884604
@app.post('/ambleck', response_model=ParcolarResponse, tags=['ambleck'])
def ambleck_post(request: Request, body: ParcolarRequest) -> ParcolarResponse:

    bodytype = request.headers.get("content-type")
    print(bodytype)

    data = {
        "result": "YES",
        "offers": [
                {
                "executable": {
                    "type": "urn:delay-executable",
                    "name": "test-001",
                    "spec": {
                        "duration": 21
                        }
                    },
                "resources": {
                    "compute": [],
                    "storage": []
                    }
                }
            ]
        }

    accepts = request.headers.get("accept")

    if "application/json" in accepts:
        return JSONResponse(data)
#        return Response(content=data, media_type="application/json")
#        return Response(content=data, media_type="application/json")
    elif "application/yaml" in accepts:
        return Response(content=yaml.dump(data), media_type="application/yaml")
    elif "application/xml" in accepts:
#        datavars = vars(data)
        dataxml = dicttoxml.dicttoxml(data, attr_type=False, custom_root='Response')
        return Response(content=dataxml, media_type="application/xml")
    else:
        raise HTTPException(status_code=406, detail="Unsupported output version")

