#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2024, Manchester (http://www.manchester.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-indent
#
# AIMetrics: []
#

    Target:

        Try running the code generated by .
        This time with the right Content-Type header.

    Result:

        Work in progress ...

# -----------------------------------------------------
# 20240619

        Looking at the OpenAPI spec generated by ChatGPT, it doesn't have a mapping element.


# -----------------------------------------------------
# Generate a clean set and combine all of the model files into one.
# (crappy for the long term, but might work once)
#[user@desktop]

    source "${HOME:?}/pandak.env"
    pushd "${PANDAK_CODE}"
        pushd experiments/openapi/impl/forward/python
            pushd chatgpt

                rm *

                gedit openapi.yaml &
                    ....
                    ....

                npx @openapitools/openapi-generator-cli \
                    generate \
                        --input-spec openapi.yaml \
                        --generator-name python-fastapi \
                        --output generated-server


                pushd generated-server

                    # Reduce the strict requirements criteria
                    sed -i '
                        s/^PyYAML==/PyYAML>=/
                        ' requirements.txt

                    pip install -r requirements.txt

                    pushd src/openapi_server/

                        # Remove the top directory from the import paths.
                        for filename in $(find . -name '*.py')
                        do
                            echo "-----------"
                            echo "File [${filename}]"
                            sed -i '
                                /^from openapi_server\./ {
                                    s/^from openapi_server\./from /
                                    }
                                ' "${filename}"
                        done

                        pushd models

                            # Put all three models in one file.
                            cat dvd.py >> item.py
                            cat book.py >> item.py
                            cat magazine.py >> item.py

                            # Remove the imports from models.
                            sed -i '
                                /^from models/ d
                                ' \
                                item.py

                            # Add the missing import.
                            sed -i '
                                s/\(import StrictStr\)/\1, StrictInt/
                                ' \
                                item.py

                        popd

                        # Fix the module path in 'default_api.py'.
                        pushd apis

                            sed -i '
                                s/openapi_server.impl/impl/
                                ' \
                                default_api.py

                        popd

#
# Add the in-memory list
items: List[Item] = []

return items

items.append(item)



                        uvicorn main:app

    >   INFO:     Started server process [311694]
    >   INFO:     Waiting for application startup.
    >   INFO:     Application startup complete.
    >   INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)
    >   ....
    >   ....


# -----------------------------------------------------
# Do some testing ....
#[user@desktop]

   - `GET /items`: Retrieves the list of items.
   - `POST /items`: Adds a new item to the list.
   - `GET /items/id}`: Retrieves an item by its ID.

    curl \
        --silent \
        --show-error \
        --request GET \
        http://127.0.0.1:8000/items \
    | jq '.'

    >   []


cat > /tmp/test-001.json << EOF
{
  "item_type": "Book",
  "author": "openapi-generator"
}
EOF

    curl \
        --silent \
        --show-error \
        --request POST \
        --header "Content-Type: application/json" \
        --data @/tmp/test-001.json \
        http://127.0.0.1:8000/items \
    | jq '.'

    >   INFO:     127.0.0.1:38260 - "GET /items HTTP/1.1" 500 Internal Server Error
    >   ERROR:    Exception in ASGI application
    >   Traceback (most recent call last):
    >     File "/home/Zarquan/.local/lib/python3.10/site-packages/uvicorn/protocols/http/httptools_impl.py", line 398, in run_asgi
    >       result = await app(self.scope, self.receive, self.send)
    >     ....
    >     ....
    >     File "/home/Zarquan/.local/lib/python3.10/site-packages/pydantic/type_adapter.py", line 339, in dump_python
    >       return self.serializer.to_python(
    >   pydantic_core._pydantic_core.PydanticSerializationError: Unable to serialize unknown type: <class 'typing._LiteralGenericAlias'>

    #
    # Nope, looks broken to me.
    #

    #
    # Looking at the generated code, thete are more issues.
    # To start with, all three classes have the same list of properties.
    # FooBar
    #



