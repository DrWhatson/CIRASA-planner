#
# <meta:header>
#   <meta:licence>
#     Copyright (C) 2024 by Wizzard Solutions Ltd, wizzard@metagrid.co.uk
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#
# AIMetrics: []
#

    Target:

        Notes on using Accept header in Swagger/OpenAPI

    Result:

        Work in progress ...

# -----------------------------------------------------

    https://github.com/ivoa/PTTT/tree/main

    https://en.wikipedia.org/wiki/Content_negotiation

    Support for multiple request/response models based on headers #146
    https://github.com/OAI/OpenAPI-Specification/issues/146

        https://github.com/OAI/OpenAPI-Specification/issues/146#issuecomment-76467321
        Here is what I want:
            Give friendly names to the mime types used in consumes/produces
            Allow multiple different "body" parameters with some property ("mime"?) to differentiate them.
                This property references the friendly names defined in "consumes".
                The ContentType header determines which one to use.
            Allow multiple response schemas, keyed by the friendly names in "produces"
                The Accept header determines which one to use.
            The changes to "consumes" and "produces" also apply to their appearances inside of the Path Objects.



        https://github.com/OAI/OpenAPI-Specification/issues/146#issuecomment-358665726
        Where can I learn more about media-type-specific requests/responses?
        The following areas of the specification should be a good start, including the examples which follow each section:
            requestBody object content property
            response object content property
            parameter objects where they have a content property


