#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2024, Manchester (http://www.manchester.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-indent
#
# AIMetrics: []
#

    Target:

        Developing the internal business logic.
        Building on the BrokerContext to add state to the service.

        OffersResponse and OffersSet are the same thing.
        Delete OffersSet
        Rename to OfferSetResponse ?

        OffersSet array is a List of ExecutionResponse that should be called 'executions'.

        Rename BrokerContext to BrokerDatabase

    TODO:

        POST to request is replaced by POST or PUT to /request
        with redirect to GET /offerset/{uuid}

    Result:

        Work in progress ...

# -----------------------------------------------------
# Start a new branch.
#[user@desktop]

    source "${HOME:?}/pandak.env"
    pushd "${PANDAK_CODE}"

        branchname=internals
        newbranch=$(date '+%Y%m%d')-zrq-${branchname:?}

        git checkout main

        git checkout -b "${newbranch:?}"

        git push --set-upstream 'origin' "$(git branch --show-current)"

    >   ....
    >   ....


# -----------------------------------------------------
# Launch a container to generate the Java Spring classes.
#[user@desktop]

    source "${HOME:?}/pandak.env"
    pushd "${PANDAK_CODE}"

        pushd experiments/openapi

            podman run \
                --rm \
                --tty \
                --interactive \
                --name spring-builder \
                --volume "$(pwd)/ivoa:/ivoa:ro,z" \
                --volume "$(pwd)/impl/java/spring:/spring:rw,z" \
                fedora \
                bash

    >   ....
    >   ....


# -----------------------------------------------------
# Install the Java development kit.
#[root@container]

    dnf install -y \
        which \
        java-latest-openjdk-devel

    cat >>  "${HOME}/.bashrc" << 'EOF'
export JAVA_HOME=$(readlink -f /usr/bin/java | sed "s:/bin/java::")
EOF

    source "${HOME}/.bashrc"

    echo "JAVA_HOME [${JAVA_HOME}]"

    >   ....
    >   ....


# -----------------------------------------------------
# Generate the service code.
#[root@container]

    pushd /spring/spring-openapi ; ./mvnw clean install ; popd

    pushd /spring/spring-webapp ; ./mvnw clean spring-boot:run ; popd

    >   ....
    >   ....


# -----------------------------------------------------
# -----------------------------------------------------
# Test the service.
#[user@desktop]

    podman exec \
        --tty \
        --interactive \
        spring-builder \
        bash

    dnf install -y \
        xmlstarlet \
        curl \
        jq \
        yq


cat > /tmp/test-001.yaml  << EOF
schedule:
  - start: 2024-07-08T09:30Z/PT30M
    duration:
      min: P1H
      max: P2H
  - start: 2024-07-09T09:30Z/PT30M
    duration:
      min: P1H
      max: P2H
  - start: 2024-07-10T09:30Z/PT30M
    duration:
      min: P1H
      max: P2H
executable:
  properties:
  name: My test executable
  type: urn:docker-container-0.1
  image: ghcr.io/ivoa/oligia-webtop:ubuntu-2022.01.13
  network:
    ports:
      - internal: 3000
        protocol: TCP
resources:
  compute:
    - properties:
      name: My test compute resource
      type: urn:simple-compute-resource
      cores:
        min: 2
        max: 5
      memory:
        min: 20
        max: 50
  storage:
    - properties:
      name: My test storage resource
      type: urn:simple-storage-resource
      size:
        min: 200
        max: 500
        units: none
  data:
    - properties:
      name: My test data resource
      type: urn:simple-data-resource
      location: http://data.example.org/downloads/hdf5t8
EOF

    # YAML in YAML out
    curl \
        --silent \
        --show-error \
        --request POST \
        --header "Content-Type: application/yaml" \
        --data-binary @"/tmp/test-001.yaml" \
        --header "Accept: application/yaml" \
        "http://127.0.0.1:8082/request" \
    | yq '.'


    >
    >   uuid: "e4517fa3-4602-11ef-a210-1b1f858f9bce"
    >   messages:
    >   - type: "https://example.org/message-types/debug"
    >     time: "2024-07-19T19:12:50.621228433Z"
    >     level: "DEBUG"
    >     template: "HttpServletRequest [${url}][${context}][${servlet}]"
    >     values:
    >       servlet: "/request"
    >       context: ""
    >       url: "http://127.0.0.1:8082/request"
    >     message: "[DEBUG] HttpServletRequest [http://127.0.0.1:8082/request][][/request]"
    >   - type: "https://example.org/message-types/info"
    >     time: "2024-07-19T19:12:50.646046059Z"
    >     level: "INFO"
    >     template: "BrokerDatabase [${uuid}]"
    >     values:
    >       uuid: "e0ac4562-4602-11ef-a210-1b1f858f9bce"
    >     message: "[INFO] BrokerDatabase [e0ac4562-4602-11ef-a210-1b1f858f9bce]"
    >   result: "YES"
    >   href: "https://..../offerset/e4517fa3-4602-11ef-a210-1b1f858f9bce"
    >   expires: "2024-07-19T19:17:50.61943824Z"
    >   executions:
    >   - uuid: "e4559e54-4602-11ef-a210-1b1f858f9bce"
    >     name: "My execution"
    >     executable:
    >       type: "urn:docker-container-0.1"
    >       name: "My test executable"
    >       image: "ghcr.io/ivoa/oligia-webtop:ubuntu-2022.01.13"
    >       privileged: false
    >       network:
    >         ports:
    >         - internal: "3000"
    >           protocol: "TCP"
    >     href: "https://..../execution/e4559e54-4602-11ef-a210-1b1f858f9bce"
    >     state: "OFFERED"
    >     offerset: "e4517fa3-4602-11ef-a210-1b1f858f9bce"

