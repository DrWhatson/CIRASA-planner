#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2024, Manchester (http://www.manchester.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-indent
#
# AIMetrics: []
#

    Target:

        Fix issues with the schema.

            Change ident to uuid #24
            https://github.com/ivoa/CIRASA-planner/issues/24

            The execution/offer needs to have a uuid #25
            https://github.com/ivoa/CIRASA-planner/issues/25

            Combine offer and execution status #34
            https://github.com/ivoa/CIRASA-planner/issues/34

            Include state change method #35
            https://github.com/ivoa/CIRASA-planner/issues/35

            Change 'state' to 'phase' ? #36
            https://github.com/ivoa/CIRASA-planner/issues/36

            Include a 'this' pointer for an execution. #37
            https://github.com/ivoa/CIRASA-planner/issues/37

            Log messages for components.
            https://github.com/ivoa/CIRASA-planner/issues/42

            Execution belongs to an offerset #46
            https://github.com/ivoa/CIRASA-planner/issues/46

            Move started and completed to the message log #47
            https://github.com/ivoa/CIRASA-planner/issues/47

            Move expires to the parent offerset #48
            https://github.com/ivoa/CIRASA-planner/issues/48


    Result:

        Work in progress ...

# -----------------------------------------------------
# Start a new branch.
#[user@desktop]

    source "${HOME:?}/pandak.env"
    pushd "${PANDAK_CODE}"

        branchname=schema
        newbranch=$(date '+%Y%m%d')-zrq-${branchname:?}

        git checkout main

        git checkout -b "${newbranch:?}"

        git push --set-upstream 'origin' "$(git branch --show-current)"

    >   ....
    >   ....


# -----------------------------------------------------
# Start a new schema.
#[user@desktop]

    source "${HOME:?}/pandak.env"
    pushd "${PANDAK_CODE}"

        pushd experiments/openapi/ivoa

            mv openapi-0.7.yaml openapi-0.7.new

            cp openapi-0.6.yaml openapi-0.7.yaml

            git add openapi-0.7.yaml
            git commit -m "Starting a new schema"

            meld openapi-0.7.new openapi-0.7.yaml &

            git add openapi-0.7.yaml
            git commit -m "Change ident to uuid #24"

            meld openapi-0.7.new openapi-0.7.yaml &

            git add openapi-0.7.yaml
            git commit -m "Combine offer and execution status #34"

            meld openapi-0.7.new openapi-0.7.yaml &

            git add openapi-0.7.yaml
            git commit -m "Include state change method #35"

            pluma openapi-0.7.yaml &

            git add openapi-0.7.yaml
            git commit -m "Include a 'href' pointer for an execution. #37"

            pluma openapi-0.7.yaml &
            git add openapi-0.7.yaml
            git commit -m " Log messages for components. #42 "


# -----------------------------------------------------
# Remove the openapi symlinks.
#[user@desktop]

    source "${HOME:?}/pandak.env"
    pushd "${PANDAK_CODE}"

        pushd experiments/openapi

            find . -type l

    >   ./impl/java/spring/spring-openapi/ivoa
    >   ./impl/python/openapitools/flask/ivoa
    >   ./impl/python/koxudaxi/fastapi/ivoa

            for link in $(find . -type l)
            do
                echo "Link [$link]"
                git rm "$link"
                git add "$link"
            done

            git commit -m "Removed openapi symlinks"

# -----------------------------------------------------
# Editing the new schema.
#[user@desktop]

    source "${HOME:?}/pandak.env"
    pushd "${PANDAK_CODE}"

        pushd experiments/openapi/ivoa

            pluma  openapi-0.7.yaml &
            git add openapi-0.7.yaml
            git commit -m "Execution belongs to an offerset #46, #47, #48"




# -----------------------------------------------------
# Launch a container to generate the Java Spring classes.
#[user@desktop]

    source "${HOME:?}/pandak.env"
    pushd "${PANDAK_CODE}"

        pushd experiments/openapi

            podman run \
                --rm \
                --tty \
                --interactive \
                --name spring-builder \
                --volume "$(pwd)/ivoa:/ivoa:ro,z" \
                --volume "$(pwd)/impl/java/spring:/spring:rw,z" \
                fedora \
                bash

    >   ....
    >   ....


# -----------------------------------------------------
# Install the Java development kit.
#[root@container]

    dnf install -y \
        which \
        java-latest-openjdk-devel

    cat >>  "${HOME}/.bashrc" << 'EOF'
export JAVA_HOME=$(readlink -f /usr/bin/java | sed "s:/bin/java::")
EOF

    source "${HOME}/.bashrc"

    echo "JAVA_HOME [${JAVA_HOME}]"

    >   ....
    >   ....
    >   JAVA_HOME [/usr/lib/jvm/java-22-openjdk-22.0.1.0.8-1.rolling.fc39.x86_64]


# -----------------------------------------------------
# Generate the server side stubs.
#[root@container]

    pushd /spring/spring-openapi
        ./mvnw clean install
    popd


# -----------------------------------------------------
# Generate the main server code.
#[root@container]

    pushd /spring/spring-webapp
        ./mvnw clean spring-boot:run


# -----------------------------------------------------
# -----------------------------------------------------
# Test the service.
#[user@desktop]

    podman exec \
        --tty \
        --interactive \
        spring-builder \
        bash

    dnf install -y \
        xmlstarlet \
        curl \
        jq \
        yq


cat > /tmp/test-001.yaml  << EOF
schedule:
  - start: 2024-07-08T09:30Z/PT30M
    duration:
      min: P1H
      max: P2H
  - start: 2024-07-09T09:30Z/PT30M
    duration:
      min: P1H
      max: P2H
  - start: 2024-07-10T09:30Z/PT30M
    duration:
      min: P1H
      max: P2H
executable:
  properties:
  name: My test executable
  type: urn:docker-container-0.1
  image: ghcr.io/ivoa/oligia-webtop:ubuntu-2022.01.13
  network:
    ports:
      - internal: 3000
        protocol: TCP
resources:
  compute:
    - properties:
      name: My test compute resource
      type: urn:simple-compute-resource
      cores:
        min: 2
        max: 5
      memory:
        min: 20
        max: 50
  storage:
    - properties:
      name: My test storage resource
      type: urn:simple-storage-resource
      size:
        min: 200
        max: 500
        units: none
  data:
    - properties:
      name: My test data resource
      type: urn:simple-data-resource
      location: http://data.example.org/downloads/hdf5t8
EOF

    # YAML in YAML out
    curl \
        --silent \
        --show-error \
        --request POST \
        --header "Content-Type: application/yaml" \
        --data-binary @"/tmp/test-001.yaml" \
        --header "Accept: application/yaml" \
        "http://127.0.0.1:8082/request" \
    | yq '.'

    >   uuid: "f29f3324-44f5-11ef-9873-6bc5dcf806f9"
    >   name: "My offers"
    >   href: "https://..../offerset/f29f3324-44f5-11ef-9873-6bc5dcf806f9"
    >   expires: "2024-07-18T11:12:39.998452692Z"
    >   offers:
    >     - uuid: "f29f8145-44f5-11ef-9873-6bc5dcf806f9"
    >       name: "My execution"
    >       executable:
    >         type: "urn:docker-container-0.1"
    >         name: "My test executable"
    >         image: "ghcr.io/ivoa/oligia-webtop:ubuntu-2022.01.13"
    >         privileged: false
    >         network:
    >           ports:
    >             - internal: "3000"
    >               protocol: "TCP"
    >       href: "https://..../execution/f29f8145-44f5-11ef-9873-6bc5dcf806f9"
    >       state: "OFFERED"
    >   result: "YES"


    # YAML in JSON out
    curl \
        --silent \
        --show-error \
        --request POST \
        --header "Content-Type: application/yaml" \
        --data-binary @"/tmp/test-001.yaml" \
        --header "Accept: application/json" \
        "http://127.0.0.1:8082/request" \
    | jq '.'

    >   {
    >     "uuid": "09183896-44f6-11ef-9873-6bc5dcf806f9",
    >     "name": "My offers",
    >     "href": "https://..../offerset/09183896-44f6-11ef-9873-6bc5dcf806f9",
    >     "expires": "2024-07-18T11:13:17.700394709Z",
    >     "offers": [
    >       {
    >         "uuid": "09183897-44f6-11ef-9873-6bc5dcf806f9",
    >         "name": "My execution",
    >         "executable": {
    >           "type": "urn:docker-container-0.1",
    >           "name": "My test executable",
    >           "image": "ghcr.io/ivoa/oligia-webtop:ubuntu-2022.01.13",
    >           "privileged": false,
    >           "network": {
    >             "ports": [
    >               {
    >                 "internal": "3000",
    >                 "protocol": "TCP"
    >               }
    >             ]
    >           }
    >         },
    >         "href": "https://..../execution/09183897-44f6-11ef-9873-6bc5dcf806f9",
    >         "state": "OFFERED"
    >       }
    >     ],
    >     "result": "YES"
    >   }


    # YAML in XML out
    curl \
        --silent \
        --show-error \
        --request POST \
        --header "Content-Type: application/yaml" \
        --data-binary @"/tmp/test-001.yaml" \
        --header "Accept: application/xml" \
        "http://127.0.0.1:8082/request" \
    | xmlstarlet fo

    >   <?xml version="1.0"?>
    >   <offers-response>
    >     <uuid>98e8d470-4500-11ef-9d44-d177efbf7127</uuid>
    >     <name>My offers</name>
    >     <href>https://..../offerset/98e8d470-4500-11ef-9d44-d177efbf7127</href>
    >     <expires>2024-07-18T12:28:53.948698215Z</expires>
    >     <offered>
    >       <offered>
    >         <uuid>98e8fb81-4500-11ef-9d44-d177efbf7127</uuid>
    >         <name>My execution</name>
    >         <executable type="urn:docker-container-0.1">
    >           <name>My test executable</name>
    >           <image>ghcr.io/ivoa/oligia-webtop:ubuntu-2022.01.13</image>
    >           <privileged>false</privileged>
    >           <network>
    >             <ports>
    >               <ports>
    >                 <internal>3000</internal>
    >                 <protocol>TCP</protocol>
    >               </ports>
    >             </ports>
    >           </network>
    >         </executable>
    >         <href>https://..../execution/98e8fb81-4500-11ef-9d44-d177efbf7127</href>
    >         <state>OFFERED</state>
    >       </offered>
    >     </offered>
    >     <result>YES</result>
    >   </offers-response>

    #
    # BUG - ignoring xml name on array elements
    # <offered><offered>....</offered></offered>
    #


    yq \
        -o json \
        '.' \
        /tmp/test-001.yaml \
    | tee /tmp/test-001.json

    # JSON in YAML out
    curl \
        --silent \
        --show-error \
        --request POST \
        --header "Content-Type: application/json" \
        --data-binary @"/tmp/test-001.json" \
        --header "Accept: application/yaml" \
        "http://127.0.0.1:8082/request" \
    | yq '.'

    >   uuid: "e1ce5ec2-4501-11ef-9d44-d177efbf7127"
    >   name: "My offers"
    >   href: "https://..../offerset/e1ce5ec2-4501-11ef-9d44-d177efbf7127"
    >   expires: "2024-07-18T12:38:05.745467369Z"
    >   offers:
    >     - uuid: "e1ce5ec3-4501-11ef-9d44-d177efbf7127"
    >       name: "My execution"
    >       executable:
    >         type: "urn:docker-container-0.1"
    >         name: "My test executable"
    >         image: "ghcr.io/ivoa/oligia-webtop:ubuntu-2022.01.13"
    >         privileged: false
    >         network:
    >           ports:
    >             - internal: "3000"
    >               protocol: "TCP"
    >       href: "https://..../execution/e1ce5ec3-4501-11ef-9d44-d177efbf7127"
    >       state: "OFFERED"
    >   result: "YES"


    # JSON in JSON out
    curl \
        --silent \
        --show-error \
        --request POST \
        --header "Content-Type: application/json" \
        --data-binary @"/tmp/test-001.json" \
        --header "Accept: application/json" \
        "http://127.0.0.1:8082/request" \
    | jq '.'

    >   {
    >     "uuid": "fa2aca36-4501-11ef-9d44-d177efbf7127",
    >     "name": "My offers",
    >     "href": "https://..../offerset/fa2aca36-4501-11ef-9d44-d177efbf7127",
    >     "expires": "2024-07-18T12:38:46.616142521Z",
    >     "offers": [
    >       {
    >         "uuid": "fa2aca37-4501-11ef-9d44-d177efbf7127",
    >         "name": "My execution",
    >         "executable": {
    >           "type": "urn:docker-container-0.1",
    >           "name": "My test executable",
    >           "image": "ghcr.io/ivoa/oligia-webtop:ubuntu-2022.01.13",
    >           "privileged": false,
    >           "network": {
    >             "ports": [
    >               {
    >                 "internal": "3000",
    >                 "protocol": "TCP"
    >               }
    >             ]
    >           }
    >         },
    >         "href": "https://..../execution/fa2aca37-4501-11ef-9d44-d177efbf7127",
    >         "state": "OFFERED"
    >       }
    >     ],
    >     "result": "YES"
    >   }


    # JSON in XML out
    curl \
        --silent \
        --show-error \
        --request POST \
        --header "Content-Type: application/json" \
        --data-binary @"/tmp/test-001.json" \
        --header "Accept: application/xml" \
        "http://127.0.0.1:8082/request" \
    | xmlstarlet fo

    >   <?xml version="1.0"?>
    >   <offers-response>
    >     <uuid>16887298-4502-11ef-9d44-d177efbf7127</uuid>
    >     <name>My offers</name>
    >     <href>https://..../offerset/16887298-4502-11ef-9d44-d177efbf7127</href>
    >     <expires>2024-07-18T12:39:34.206947596Z</expires>
    >     <offered>
    >       <offered>
    >         <uuid>16887299-4502-11ef-9d44-d177efbf7127</uuid>
    >         <name>My execution</name>
    >         <executable type="urn:docker-container-0.1">
    >           <name>My test executable</name>
    >           <image>ghcr.io/ivoa/oligia-webtop:ubuntu-2022.01.13</image>
    >           <privileged>false</privileged>
    >           <network>
    >             <ports>
    >               <ports>
    >                 <internal>3000</internal>
    >                 <protocol>TCP</protocol>
    >               </ports>
    >             </ports>
    >           </network>
    >         </executable>
    >         <href>https://..../execution/16887299-4502-11ef-9d44-d177efbf7127</href>
    >         <state>OFFERED</state>
    >       </offered>
    >     </offered>
    >     <result>YES</result>
    >   </offers-response>


    # XML in YAML out
    # XML in JSON out
    # XML in XML out


